<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:cache="http://www.springframework.org/schema/cache" xmlns:p="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">


    <!--基于注解    注解扫描驱动-->
<!--    <cache:annotation-driven proxy-target-class="false" mode="proxy"/>-->


        <!--基于XML的配置-->
        <!--<cache:advice id="cacheAdvice" cache-manager="cacheManager">
            <cache:caching cache="myCache">
                <cache:cacheable method="getUser" key="#userId"/>
            </cache:caching>
        </cache:advice>
        <aop:config proxy-target-class="false">
            <aop:advisor advice-ref="cacheAdvice" pointcut="execution(* com.cjw.demo.service.*(..))"/>
        </aop:config>-->
    <!--测试通过，不建议,不灵活-->

    <!--Spring  基于ConcurrentMap的配置  cache缓存器配置-->
<!--    <bean id="cacheManager" class="org.springframework.cache.support.SimpleCacheManager">
        <property name="caches">
            <set>
                <bean name="myCache" class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean"/>
            </set>
        </property>
    </bean>-->
    <!--测试通过-->


    <!-- Spring提供的基于的Ehcache实现的缓存管理器 -->
<!--    <bean id="cacheManagerFactory" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">
        &lt;!&ndash; 指定配置文件的位置 ,此配置一般放在applicationContext,否则cache将再拆出&ndash;&gt;
        <property name="configLocation" value="classpath:ehCache.xml"/>
    </bean>
    <bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheCacheManager">
        <property name="cacheManager" ref="cacheManagerFactory"/>
    </bean>-->
    <!--测试通过-->


    <!--不采用spring,独自ehcache实现缓存策略，使用更简洁,能应用不同场景，但需要自己编写相应代码-->
        <bean id="cacheDefaultConfig" class="com.cjw.demo.doc.ehcache.DefaultConfig">
            <property name="maxElementsInMemory" value="1000"/>
            <!-- 元素最大数量 -->
            <property name="memoryStoreEvictionPolicy" value="LRU"/>
            <!-- 元素最大数量 -->
            <property name="overflowToDisk" value="false"/>
            <!-- 是否持久化到硬盘 -->
            <property name="diskStorePath" value=""/>
            <property name="eternal" value="true"/>
            <!-- 设置元素（译注：内存中对象）是否永久驻留。如果是，将忽略超时限制且元素永不消亡   -->
            <property name="timeToLiveSeconds" value="0"/>
            <!--  缓存存活时间 -->
            <property name="timeToIdleSeconds" value="0"/>
            <!--   缓存的间隔时间 -->
            <property name="diskPersistent" value="false"/>
        </bean>


        <!-- ========================== UserInfo  Cache   test========================== -->
        <bean id="userInfoCacheStore" class="com.cjw.demo.doc.ehcache.CacheStore">
            <property name="eternal" value="false"/>
            <property name="timeToLiveSeconds" value="1440"/>
        </bean>

        <bean id="userInfoCacheProvider" class="com.cjw.demo.doc.ehcache.provider.UserInfoCacheProvider">
            <property name="cacheName" value="_user_info"/>
        </bean>

        <bean id="addressCache" class="com.cjw.demo.doc.ehcache.BaseCache">
            <property name="cacheName" value="_user_info"/>
            <property name="cacheStore" ref="userInfoCacheStore"/>
            <property name="cacheProvider" ref="userInfoCacheProvider"/>
        </bean>
</beans>